[tool.poetry]
name = "bods-backend"
version = "1.0.2"
description = ""
authors = []
readme = "README.md"
packages = [
  { from = "src", include = "boilerplate" },
  { from = "src/boilerplate", include = "common_layer" },
]

[tool.poetry.scripts]
create-tables-dev = "src.boilerplate.common_layer.database.create_tables:create_db_tables"

[tool.poetry.dependencies]
python = "^3.11"
lxml = "^5.3.0"
pydantic = "^2.9.2"
boto3 = "^1.35.57"

[tool.poetry.group.database.dependencies]
sqlalchemy = "^2.0.36"
geoalchemy2 = "^0.16.0"
psycopg2-binary = "^2.9.10"

[tool.poetry.group.etl.dependencies]
structlog = "^24.4.0"
pydantic-settings = "^2.6.1"
shapely = "^2.0.6"
pyproj = "^3.7.0"

[tool.poetry.group.boilerplate.dependencies]
django = "^5.1.4"
requests = "^2.32.3"
defusedxml = "^0.7.1"
pytz = "^2024.2"
pandas = "^2.2.3"

[tool.poetry.group.pti.dependencies]
isoduration = "^20.11.0"

[tool.poetry.group.antivirus.dependencies]
clamd = "^1.0.2"

[tool.poetry.group.model_gen.dependencies]
sqlalchemy-citext = "^1.8.0"
pgvector = "^0.3.6"

[tool.poetry.group.dev.dependencies]
pylint = "^3.3.1"
black = "^24.10.0"
pytest = "^8.3.3"
types-lxml = "^2024.11.8"
freezegun = "^1.5.1"
factory-boy = "^3.3.1"
mypy-boto3-s3 = "^1.35.76"
boto3-stubs = { extras = ["essential"], version = "^1.35.0" }
pytest-cov = "^6.0.0"
rich = "^13.9.4"
aws-sam-cli = "^1.131.0"
aws-sam-cli-local = "^1.70.0"
python-dotenv = "^1.0.1"
typer = "^0.15.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.MAIN]
extension-pkg-allow-list = ["lxml", "pydantic", "pydantic_core"]

[tool.pytest.ini_options]
pythonpath = ["./src", "./src/timetables_etl", "./tests", "./src/boilerplate"]
addopts = [
  "-v",
  "-rsxX",
  "--continue-on-collection-errors",
  "--cov=./src/",
  "--cov-report=term-missing",
  "--cov-fail-under=90",
]
testpaths = ["./tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]

[tool.coverage.run]
omit = [
  "src/boilerplate/db/models.py",
  "src/boilerplate/common_layer/database/**/*", # Ignoring for now whilst mock scheme is devised
]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.aws-sam
  | \.pytest_cache
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.venv-aws
  | _build
  | buck-out
  | build
  | dist
  | node_modules
)/
'''
