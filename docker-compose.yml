version: '3.8'
services:
  postgres:
    container_name: postgres
    image: postgres:15
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_ADMIN_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD}
    volumes:
      - ${PWD}/sql/local:/docker-entrypoint-initdb.d:ro
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks: 
      - lambda-local

  pgadmin:
    build:
      context: .
      dockerfile: ./docker/pgadmin/Dockerfile
      args:
        - POSTGRES_PORT=${POSTGRES_PORT}
        - POSTGRES_USER=${POSTGRES_ADMIN_USER}
        - POSTGRES_HOST=postgres
    container_name: pgadmin
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
    restart: unless-stopped
    networks:
    - lambda-local

  localstack:
    container_name: ${LOCALSTACK_DOCKER_NAME:-localstack-main}
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"
    environment:
      - DEBUG=1
    volumes:
      - ${PWD}/localstack/scripts/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh:ro
      - localstack-data:/var/lib/localstack"
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - lambda-local

  clamav:
    image: mkodockx/docker-clamav:alpine
    ports:
      - "3310:3310"
    restart: unless-stopped
    volumes:
      - clamav_store:/var/lib/clamav

volumes:
  postgres-data:
  localstack-data:
  clamav_store:

networks:
  lambda-local:
    name: lambda-local
    driver: bridge