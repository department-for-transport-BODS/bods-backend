AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Supporting services for the execution of periodic tasks

Parameters:
  Environment:
    Type: String
    Description: The environment into which the stack is being deployed
  ProjectName:
    Description: The name of the project
    Type: String
  SubFunction:
    Description: The sub-fuction that each resource relates to
    Type: String
    Default: 'pt'
  AvlConsumerApiBaseUrl:
    Type: String
  CavlConsumerUrl:
    Type: String
  GtfsApiBaseUrl:
    Type: String
  RdsDbHostAddr:
    Type: String
  RdsDbPort:
    Type: Number
  BoilerplateLambdaLayerArn:
    Type: String

Conditions:
  IsNotLocal: !Not [!Equals [!Ref Environment, 'local']]

Globals:
  Function:
    Architectures:
      - x86_64
    Runtime: python3.11
    Timeout: 60
    MemorySize: 1024
    ReservedConcurrentExecutions: 3
    KmsKeyArn: !If
      - IsNotLocal
      - !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      - !Ref AWS::NoValue
    VpcConfig: !If
      - IsNotLocal
      - SubnetIds:
          - !Sub '{{resolve:ssm:/bodds/${Environment}/private-subnet-0}}'
          - !Sub '{{resolve:ssm:/bodds/${Environment}/private-subnet-1}}'
          - !Sub '{{resolve:ssm:/bodds/${Environment}/private-subnet-2}}'
        SecurityGroupIds:
          - !GetAtt CommonLambdaSecurityGroup.GroupId
      - !Ref AWS::NoValue

Resources:
  ###################################
  #### PT ITERATOR STATE MACHINE ####
  ###################################
  IteratorStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-${SubFunction}-iterator-sm'
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref IteratorLambda
      Events:
        Scheduler:
          Type: Schedule
          Properties:
            Name: !Sub '${ProjectName}-${Environment}-${SubFunction}-iterator-sm-scheduler'
            Schedule: rate(1 minute)
            Enabled: True
            Input: !Sub |
              {
                "functions": [ 
                  "${GenerateGtfsRtLambda}",
                  "${GenerateSiriVmLambda}",
                  "${GenerateSiriVmTflLambda}"
                ]
              }
      Definition:
        StartAt: ConfigureCount
        States:
          ConfigureCount:
            Next: MapState
            Result:
              intervals: [0, 10, 20, 30, 40, 50]
            ResultPath: $.config
            Type: Pass
          MapState:
            Type: Map
            ItemsPath: $.functions
            Iterator:
              StartAt: InvokeLambda
              States:
                InvokeLambda:
                  Type: Task
                  Resource: !GetAtt IteratorLambda.Arn
                  Parameters:
                    functionName.$: $.functionName
                    intervals.$: $.intervals
                  Next: Done
                Done:
                  End: true
                  Type: Pass
            Parameters:
              functionName.$: $$.Map.Item.Value
              intervals.$: $.config.intervals
            End: true

  #########################
  #### ITERATOR LAMBDA ####
  #########################
  IteratorLambda:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_117:Ensure that AWS Lambda function is configured inside a VPC
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-${SubFunction}-iterator-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: iterator.lambda_handler
      MemorySize: 128
      VpcConfig:
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateGtfsRtLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateSiriVmLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateSiriVmTflLambda
      LoggingConfig:
        LogGroup: !Ref IteratorLambdaLogGroup

  IteratorLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-${SubFunction}-iterator-lambda'
      KmsKeyId: !If
        - IsNotLocal
        - !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
        - !Ref AWS::NoValue
      RetentionInDays: 30

  ################################
  #### GENERATE GTFSRT LAMBDA ####
  ################################
  GenerateGtfsRtLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-${SubFunction}-generate-gtfsrt-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: create_gtfsrt_zip.lambda_handler
      Layers:
        - !Ref BoilerplateLambdaLayerArn
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - S3WritePolicy:
            BucketName: !Sub '{{resolve:ssm:/bodds/${Environment}/s3/sirivm/name}}'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - kms:GenerateDataKey
              Resource: !If
                - IsNotLocal
                - !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
                - '*'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'arn:aws:iam::aws:policy/AmazonRDSFullAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess'
      Environment:
        Variables:
          AWS_SIRIVM_STORAGE_BUCKET_NAME: !Sub '{{resolve:ssm:/bodds/${Environment}/s3/sirivm/name}}'
          CAVL_CONSUMER_URL: !Ref CavlConsumerUrl
          GTFS_API_BASE_URL: !Ref GtfsApiBaseUrl
          # GTFS_API_ACTIVE: 'True'
          HTTPS_PROXY: !If
            - IsNotLocal
            - !Sub 'http://squid.bodds.${Environment}:3128'
            - !Ref AWS::NoValue
          PROJECT_ENV: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          POSTGRES_HOST: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-endpoint}}'
            - !Ref RdsDbHostAddr
          POSTGRES_PORT: !Ref RdsDbPort
          POSTGRES_DB: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-db-name}}'
            - postgres
          POSTGRES_USER: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/pg-rw-user}}'
            - bodds_rw
      LoggingConfig:
        LogGroup: !Ref GenerateGtfsRtLambdaLogGroup

  GenerateGtfsRtLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-${SubFunction}-generate-gtfsrt-lambda'
      KmsKeyId: !If
        - IsNotLocal
        - !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
        - !Ref AWS::NoValue
      RetentionInDays: 30

  ################################
  #### GENERATE SIRIVM LAMBDA ####
  ################################
  GenerateSiriVmLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-${SubFunction}-generate-sirivm-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: create_sirivm_zip.lambda_handler
      Layers:
        - !Ref BoilerplateLambdaLayerArn
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - S3WritePolicy:
            BucketName: !Sub '{{resolve:ssm:/bodds/${Environment}/s3/sirivm/name}}'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - kms:GenerateDataKey
              Resource: !If
                - IsNotLocal
                - !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
                - '*'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'arn:aws:iam::aws:policy/AmazonRDSFullAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess'
      Environment:
        Variables:
          AWS_SIRIVM_STORAGE_BUCKET_NAME: !Sub '{{resolve:ssm:/bodds/${Environment}/s3/sirivm/name}}'
          AVL_CONSUMER_API_BASE_URL: !Ref AvlConsumerApiBaseUrl
          HTTPS_PROXY: !If
            - IsNotLocal
            - !Sub 'http://squid.bodds.${Environment}:3128'
            - !Ref AWS::NoValue
          PROJECT_ENV: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          POSTGRES_HOST: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-endpoint}}'
            - !Ref RdsDbHostAddr
          POSTGRES_PORT: !Ref RdsDbPort
          POSTGRES_DB: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-db-name}}'
            - postgres
          POSTGRES_USER: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/pg-rw-user}}'
            - bodds_rw
      LoggingConfig:
        LogGroup: !Ref GenerateSiriVmLambdaLogGroup

  GenerateSiriVmLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-${SubFunction}-generate-sirivm-lambda'
      KmsKeyId: !If
        - IsNotLocal
        - !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
        - !Ref AWS::NoValue
      RetentionInDays: 30

  ####################################
  #### GENERATE SIRIVM TFL LAMBDA ####
  ####################################
  GenerateSiriVmTflLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-${SubFunction}-generate-sirivm-tfl-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: create_sirivm_tfl_zip.lambda_handler
      Layers:
        - !Ref BoilerplateLambdaLayerArn
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - S3WritePolicy:
            BucketName: !Sub '{{resolve:ssm:/bodds/${Environment}/s3/sirivm/name}}'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - kms:GenerateDataKey
              Resource: !If
                - IsNotLocal
                - !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
                - '*'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'arn:aws:iam::aws:policy/AmazonRDSFullAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess'
      Environment:
        Variables:
          AWS_SIRIVM_STORAGE_BUCKET_NAME: !Sub '{{resolve:ssm:/bodds/${Environment}/s3/sirivm/name}}'
          AVL_CONSUMER_API_BASE_URL: !Ref AvlConsumerApiBaseUrl
          HTTPS_PROXY: !If
            - IsNotLocal
            - !Sub 'http://squid.bodds.${Environment}:3128'
            - !Ref AWS::NoValue
          PROJECT_ENV: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          POSTGRES_HOST: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-endpoint}}'
            - !Ref RdsDbHostAddr
          POSTGRES_PORT: !Ref RdsDbPort
          POSTGRES_DB: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-db-name}}'
            - postgres
          POSTGRES_USER: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/pg-rw-user}}'
            - bodds_rw
      LoggingConfig:
        LogGroup: !Ref GenerateSiriVmTflLambdaLogGroup

  GenerateSiriVmTflLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-${SubFunction}-generate-sirivm-tfl-lambda'
      KmsKeyId: !If
        - IsNotLocal
        - !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
        - !Ref AWS::NoValue
      RetentionInDays: 30

  #########################################
  #### GENERAL CONFIGURATION RESOURCES ####
  #########################################
  CommonLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: IsNotLocal
    Properties:
      GroupDescription: !Sub 'Security group for ${ProjectName}-${Environment}-${SubFunction} PT related lambda functions'
      GroupName: !Sub '${ProjectName}-${Environment}-${SubFunction}-common-lambda'
      SecurityGroupEgress:
        - IpProtocol: '-1'
          Description: 'Allow outbound connectivity to any'
          CidrIp: '0.0.0.0/0'
      VpcId: !Sub '{{resolve:ssm:/bodds/${Environment}/vpc-id}}'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-${SubFunction}-common-lambda'

  CommonLambdaSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: IsNotLocal
    Properties:
      GroupId: !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-sg-id}}'
      Description: !Sub 'Allow inbound connectivity from ${ProjectName}-${Environment}-${SubFunction}-common-lambda'
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !GetAtt CommonLambdaSecurityGroup.GroupId
