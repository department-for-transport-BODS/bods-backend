AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Supporting services for the execution of periodic tasks

Parameters:
  Environment:
    Type: String
    Description: The environment into which the stack is being deployed
  ProjectName:
    Description: The name of the project
    Type: String
  AvlConsumerApiBaseUrl:
    Type: String
  GtfsApiBaseUrl:
    Type: String
  RdsDbHostAddr:
    Type: String
  RdsDbPort:
    Type: Number

Conditions:
  IsNotLocal: !Not [!Equals [!Ref Environment, 'local']]

Globals:
  Function:
    Architectures:
      - x86_64
    Runtime: python3.11
    Timeout: 60
    MemorySize: 1024
    ReservedConcurrentExecutions: 3
    KmsKeyArn: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
    VpcConfig:
      SubnetIds:
        - !Sub '{{resolve:ssm:/bodds/${Environment}/private-subnet-0}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/private-subnet-1}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/private-subnet-2}}'
      SecurityGroupIds:
        - !GetAtt CommonLambdaSecurityGroup.GroupId

Resources:
  ###################################
  #### PT ITERATOR STATE MACHINE ####
  ###################################
  PtIteratorStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub '${ProjectName}-${Environment}-pt-iterator-sm'
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref PtIteratorLambda
      Events:
        Scheduler:
          Type: Schedule
          Properties:
            Name: !Sub '${ProjectName}-${Environment}-pt-iterator-sm-scheduler'
            Schedule: rate(1 minute)
      Definition:
        StartAt: ConfigureCount
        States:
          ConfigureCount:
            Type: Pass
            Result:
              index: 0
              count: 6
            ResultPath: $.iterator
            Next: Iterator
          Iterator:
            Type: Task
            Resource: !GetAtt PtIteratorLambda.Arn
            ResultPath: $.iterator
            Next: IsCountReached
          IsCountReached:
            Type: Choice
            Choices:
              - Variable: $.iterator.continue
                BooleanEquals: true
                Next: Wait
            Default: Done
          Wait:
            Type: Wait
            Seconds: 10
            Next: Iterator
          Done:
            Type: Pass
            End: true

  ############################
  #### PT ITERATOR LAMBDA ####
  ############################
  PtIteratorLambda:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_117:Ensure that AWS Lambda function is configured inside a VPC
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-pt-iterator-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: pt_iterator.lambda_handler
      MemorySize: 128
      VpcConfig:
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateGtfsRtLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateSiriVmLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateSiriVmTflLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref ClamAvScannerLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref FileSchemaCheck
      Environment:
        Variables:
          TARGET_FUNCTION_NAMES: !Join 
            - ','
            - 
              - !Ref GenerateGtfsRtLambda
              - !Ref GenerateSiriVmLambda
              - !Ref GenerateSiriVmTflLambda
              - !Ref ClamAvScannerLambda
              - !Ref FileSchemaCheck
      LoggingConfig:
        LogGroup: !Ref PtIteratorLambdaLogGroup

  PtIteratorLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-pt-iterator-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ################################
  #### GENERATE GTFSRT LAMBDA ####
  ################################
  GenerateGtfsRtLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-generate-gtfsrt-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: create_gtfsrt_zip.lambda_handler
      Layers:
        - !Ref BoilerplateLambdaLayer
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - S3WritePolicy:
            BucketName: !Sub 'bodds-${Environment}-sirivm'
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - kms:GenerateDataKey
            Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
      Environment:
        Variables:
          AWS_SIRIVM_STORAGE_BUCKET_NAME: !Sub 'bodds-${Environment}-sirivm'
          GTFS_API_BASE_URL: !Ref GtfsApiBaseUrl
          HTTPS_PROXY: !If
            - IsNotLocal
            - !Sub 'http://squid.bodds.${Environment}:3128'
            - !Ref AWS::NoValue
          PROJECT_ENV: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          POSTGRES_HOST: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-endpoint}}'
            - !Ref RdsDbHostAddr
          POSTGRES_PORT: !Ref RdsDbPort
          POSTGRES_DB: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-db-name}}'
            - postgres
          POSTGRES_USER: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/pg-rw-user}}'
            - bodds_rw
      LoggingConfig:
        LogGroup: !Ref GenerateGtfsRtLambdaLogGroup

  GenerateGtfsRtLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-generate-gtfsrt-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ################################
  #### GENERATE SIRIVM LAMBDA ####
  ################################
  GenerateSiriVmLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-generate-sirivm-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: create_sirivm_zip.lambda_handler
      Layers:
        - !Ref BoilerplateLambdaLayer
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - S3WritePolicy:
            BucketName: !Sub 'bodds-${Environment}-sirivm'
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - kms:GenerateDataKey
            Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
      Environment:
        Variables:
          AWS_SIRIVM_STORAGE_BUCKET_NAME: !Sub 'bodds-${Environment}-sirivm'
          AVL_CONSUMER_API_BASE_URL: !Ref AvlConsumerApiBaseUrl
          HTTPS_PROXY: !If
            - IsNotLocal
            - !Sub 'http://squid.bodds.${Environment}:3128'
            - !Ref AWS::NoValue
          PROJECT_ENV: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          POSTGRES_HOST: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-endpoint}}'
            - !Ref RdsDbHostAddr
          POSTGRES_PORT: !Ref RdsDbPort
          POSTGRES_DB: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-db-name}}'
            - postgres
          POSTGRES_USER: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/pg-rw-user}}'
            - bodds_rw
      LoggingConfig:
        LogGroup: !Ref GenerateSiriVmLambdaLogGroup

  GenerateSiriVmLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-generate-sirivm-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ####################################
  #### GENERATE SIRIVM TFL LAMBDA ####
  ####################################
  GenerateSiriVmTflLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-generate-sirivm-tfl-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: create_sirivm_tfl_zip.lambda_handler
      Layers:
        - !Ref BoilerplateLambdaLayer
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - S3WritePolicy:
            BucketName: !Sub 'bodds-${Environment}-sirivm'
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - kms:GenerateDataKey
            Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
      Environment:
        Variables:
          AWS_SIRIVM_STORAGE_BUCKET_NAME: !Sub 'bodds-${Environment}-sirivm'
          AVL_CONSUMER_API_BASE_URL: !Ref AvlConsumerApiBaseUrl
          HTTPS_PROXY: !If
            - IsNotLocal
            - !Sub 'http://squid.bodds.${Environment}:3128'
            - !Ref AWS::NoValue
          PROJECT_ENV: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          POSTGRES_HOST: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-endpoint}}'
            - !Ref RdsDbHostAddr
          POSTGRES_PORT: !Ref RdsDbPort
          POSTGRES_DB: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-db-name}}'
            - postgres
          POSTGRES_USER: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/pg-rw-user}}'
            - bodds_rw
      LoggingConfig:
        LogGroup: !Ref GenerateSiriVmTflLambdaLogGroup

  GenerateSiriVmTflLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-generate-sirivm-tfl-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ################################
  #### CLAM AV SCANNER LAMBDA ####
  ################################
  ClamAvScannerLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-clam-av-scanner-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: clam_av_scanner.lambda_handler
      Layers:
        - !Ref BoilerplateLambdaLayer
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - kms:GenerateDataKey
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
      Environment:
        Variables:
          CLAMAV_HOST: !Sub 'http://clamav.bodds.${Environment}'
          CLAMAV_PORT: 3310
          PROJECT_ENV: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          POSTGRES_HOST: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-endpoint}}'
            - !Ref RdsDbHostAddr
          POSTGRES_PORT: !Ref RdsDbPort
          POSTGRES_DB: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-db-name}}'
            - postgres
          POSTGRES_USER: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/pg-rw-user}}'
            - bodds_rw
      Events:
        S3EventForZipFile:
          Type: S3
          Properties:
            Bucket:
              - !Sub 'bodds-${Environment}'
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .zip
        S3EventForZipXml:
          Type: S3
          Properties:
            Bucket:
              - !Sub 'bodds-${Environment}'
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .xml
      LoggingConfig:
        LogGroup: !Ref ClamAvScannerLambdaLogGroup
  ClamAvScannerLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-clam-av-scanner-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  
  ################################
  #### Basic File Schema Check ####
  ################################
  FileSchemaCheck:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-file-schema-check-lambda'
      CodeUri: ./src/periodic_tasks
      Handler: timetable_schema_check.lambda_handler
      Layers:
        - !Ref BoilerplateLambdaLayer
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - kms:GenerateDataKey
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
        - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
      Environment:
        Variables:
          PROJECT_ENV: !Ref Environment
          PROJECT_NAME: !Ref ProjectName
          POSTGRES_HOST: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-endpoint}}'
            - !Ref RdsDbHostAddr
          POSTGRES_PORT: !Ref RdsDbPort
          POSTGRES_DB: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-db-name}}'
            - postgres
          POSTGRES_USER: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/pg-rw-user}}'
            - bodds_rw
          TXC_XSD_PATH: TransXChange_general.xsd
      Events:
        S3EventForZipFile:
          Type: S3
          Properties:
            Bucket:
              - !Sub 'bodds-${Environment}'
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .zip
        S3EventForZipXml:
          Type: S3
          Properties:
            Bucket:
              - !Sub 'bodds-${Environment}'
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .xml
      LoggingConfig:
        LogGroup: !Ref FileSchemaCheckLambdaLogGroup
  FileSchemaCheckLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-file-schema-check-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  #########################################
  #### GENERAL CONFIGURATION RESOURCES ####
  #########################################
  CommonLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: IsNotLocal
    Properties:
      GroupDescription: !Sub 'Security group for ${ProjectName}-${Environment} PT related lambda functions'
      GroupName: !Sub '${ProjectName}-${Environment}-pt-common-lambda'
      SecurityGroupEgress: 
        - IpProtocol: '-1'
          Description: 'Allow outbound connectivity to any'
          CidrIp: '0.0.0.0/0'
      VpcId: !Sub '{{resolve:ssm:/bodds/${Environment}/vpc-id}}'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-pt-common-lambda'

  CommonLambdaSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: IsNotLocal
    Properties:
      GroupId: !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-sg-id}}'
      Description: !Sub 'Allow inbound connectivity from ${ProjectName}-${Environment}-pt-common-lambda'
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !GetAtt CommonLambdaSecurityGroup.GroupId

  BoilerplateLambdaLayer: 
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub '${ProjectName}-${Environment}-pt-boilerplate-layer'
      ContentUri: ./src/boilerplate
      CompatibleRuntimes:
        - python3.11
    Metadata:
      BuildMethod: python3.11