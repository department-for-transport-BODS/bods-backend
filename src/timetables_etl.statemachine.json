{
  "StartAt": "ProcessInput",
  "QueryLanguage": "JSONata",
  "States": {
    "ProcessInput": {
      "Type": "Pass",
      "Assign": {
        "inputDataSource": "{% $states.input.inputDataSource %}",
        "datasetRevisionId": "{% $states.input.datasetRevisionId %}",
        "datasetType": "{% $states.input.datasetType %}",
        "url": "{% $states.input.url %}",
        "s3Bucket": "{% $states.input.s3.bucket %}",
        "s3Object": "{% $states.input.s3.object %}"
      },
      "Next": "RouteByInputType"
    },
    "RouteByInputType": {
      "Type": "Choice",
      "Choices": [
        {
          "Condition": "{% $inputDataSource= 'URL_DOWNLOAD' %}",
          "Next": "DownloadDataset"
        }
      ],
      "Default": "InitializePipeline"
    },
    "DownloadDataset": {
      "Type": "Task",
      "Resource": "${DownloadDatasetLambdaArn}",
      "Arguments": {
        "Url": "{% $url %}",
        "Bucket": "{% $s3Bucket %}",
        "DatasetType": "{% $datasetType %}",
        "DatasetRevisionId": "{% $datasetRevisionId %}"
      },
      "Assign": {
        "s3Bucket": "{% $states.result.s3.bucket %}",
        "s3Object": "{% $states.result.s3.object %}"
      },
      "Next": "InitializePipeline",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ParentExceptionHandler"
        }
      ]
    },
    "InitializePipeline": {
      "Type": "Task",
      "Resource": "${InitializePipelineLambdaArn}",
      "Arguments": {
        "Bucket": "{% $s3Bucket %}",
        "ObjectKey": "{% $s3Object %}",
        "DatasetRevisionId": "{% $datasetRevisionId %}"
      },
      "Assign": {
        "DatasetEtlTaskResultId": "{% $states.result.DatasetEtlTaskResultId %}"
      },
      "Output": {
        "initializePipeline": "{% $states.result %}",
        "detail": "{% $states.input.detail %}"
      },
      "Next": "ClamAvScanner",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ParentExceptionHandler",
          "Output": {
            "errorInfo": {
              "Error": "{% $error %}",
              "Cause": "{% $cause %}"
            }
          }
        }
      ]
    },
    "ClamAvScanner": {
      "Type": "Task",
      "Resource": "${ClamAvScannerLambdaArn}",
      "Arguments": {
        "Bucket": "{% $s3Bucket %}",
        "ObjectKey": "{% $s3Object %}",
        "DatasetRevisionId": "{% $datasetRevisionId %}",
        "DatasetType": "{% $datasetType %}"
      },
      "Assign": {
        "ExtractedSubFolder": "{% $states.result.generatedPrefix %}"
      },
      "Output": {
        "scanner": "{% $states.result %}",
        "detail": "{% $states.input.detail %}"
      },
      "Next": "FileLevelProcessing",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ParentExceptionHandler"
        }
      ]
    },
    "FileLevelProcessing": {
      "Type": "Map",
      "ItemSelector": {
        "mapS3Object": "{% $states.context.Map.Item.Value.Key %}",
        "mapDatasetRevisionId": "{% $datasetRevisionId %}",
        "mapS3Bucket": "{% $s3Bucket %}",
        "mapDatasetEtlTaskResultId": "{% $DatasetEtlTaskResultId %}"
      },
      "ItemReader": {
        "Resource": "arn:aws:states:::s3:listObjectsV2",
        "Arguments": {
          "Bucket": "{% $s3Bucket %}",
          "Prefix": "{% $ExtractedSubFolder %}"
        }
      },
      "ResultWriter": {
        "Resource": "arn:aws:states:::s3:putObject",
        "Arguments": {
          "Bucket": "{% $states.input.detail.bucket.name %}",
          "Prefix": "tt-etl-map-results"
        }
      },
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "DISTRIBUTED",
          "ExecutionType": "STANDARD"
        },
        "StartAt": "ProcessMapInput",
        "States": {
          "ProcessMapInput": {
            "Type": "Pass",
            "Next": "FileValidation",
            "Assign": {
              "Bucket": "{% $$states.input.mapS3Bucket %}",
              "ObjectKey": "{% $states.input.mapS3Object %}",
              "DatasetRevisionId": "{% $states.input.mapDatasetRevisionId %}",
              "datasetEtlTaskResultId": "{% $states.input.mapDatasetEtlTaskResultId %}"
            }
          },

          "FileValidation": {
            "Type": "Task",
            "Resource": "${FileValidationLambdaArn}",
            "Arguments": {
              "Bucket": "{% $Bucket %}",
              "ObjectKey": "{% $ObjectKey %}",
              "DatasetRevisionId": "{% $DatasetRevisionId %}"
            },
            "Output": {
              "fileValidation": "{% $states.result %}"
            },
            "Next": "SchemaCheck",
            "Catch": [
              {
                "ErrorEquals": ["States.ALL"],
                "Next": "ExceptionHandler",
                "Output": {
                  "errorInfo": {
                    "Error": "$states.errorOutput.Error",
                    "Cause": "$states.errorOutput.Cause"
                  }
                }
              }
            ]
          },
          "SchemaCheck": {
            "Type": "Task",
            "Resource": "${SchemaCheckLambdaArn}",
            "Arguments": {
              "Bucket": "{% $Bucket %}",
              "ObjectKey": "{% $ObjectKey %}",
              "DatasetRevisionId": "{% $DatasetRevisionId %}"
            },
            "Output": {
              "schemaCheck": "{% $states.result %}"
            },
            "Next": "PostSchemaCheck",
            "Catch": [
              {
                "ErrorEquals": ["States.ALL"],
                "Next": "ExceptionHandler",
                "Output": {
                  "errorInfo": {
                    "Error": "$states.errorOutput.Error",
                    "Cause": "$states.errorOutput.Cause"
                  }
                }
              }
            ]
          },
          "PostSchemaCheck": {
            "Type": "Task",
            "Resource": "${PostSchemaCheckLambdaArn}",
            "Arguments": {
              "Bucket": "{% $Bucket %}",
              "ObjectKey": "{% $ObjectKey %}",
              "DatasetRevisionId": "{% $DatasetRevisionId %}"
            },
            "Output": {
              "postSchemaCheck": "{% $states.result %}"
            },
            "Next": "FileAttributesEtl",
            "Catch": [
              {
                "ErrorEquals": ["States.ALL"],
                "Next": "ExceptionHandler",
                "Output": {
                  "errorInfo": {
                    "Error": "$states.errorOutput.Error",
                    "Cause": "$states.errorOutput.Cause"
                  }
                }
              }
            ]
          },
          "FileAttributesEtl": {
            "Type": "Task",
            "Resource": "${FileAttributesEtlLambdaArn}",
            "Arguments": {
              "Bucket": "{% $Bucket %}",
              "ObjectKey": "{% $ObjectKey %}",
              "DatasetRevisionId": "{% $DatasetRevisionId %}"
            },
            "Assign": {
              "fileAttributesEtl": "{% $states.result.s3.bucket %}"
            },
            "Output": {
              "fileAttributesEtl": "{% $states.result.id %}"
            },
            "Next": "PtiValidation",
            "Catch": [
              {
                "ErrorEquals": ["States.ALL"],
                "Next": "ExceptionHandler",
                "Output": {
                  "errorInfo": {
                    "Error": "$states.errorOutput.Error",
                    "Cause": "$states.errorOutput.Cause"
                  }
                }
              }
            ]
          },
          "PtiValidation": {
            "Type": "Task",
            "Resource": "${PtiValidationLambdaArn}",
            "Arguments": {
              "Bucket": "{% $Bucket %}",
              "ObjectKey": "{% $ObjectKey %}",
              "DatasetRevisionId": "{% $DatasetRevisionId %}",
              "TxcFileAttributesId": "{% $fileAttributesEtl %}"
            },
            "Output": {
              "ptiValidation": "{% $states.result %}"
            },
            "Next": "ETLProcess",
            "Catch": [
              {
                "ErrorEquals": ["States.ALL"],
                "Next": "ExceptionHandler",
                "Output": {
                  "errorInfo": {
                    "Error": "$states.errorOutput.Error",
                    "Cause": "$states.errorOutput.Cause"
                  }
                }
              }
            ]
          },
          "ETLProcess": {
            "Type": "Task",
            "Resource": "${ETLProcessLambdaArn}",
            "Arguments": {
              "Bucket": "{% $Bucket %}",
              "ObjectKey": "{% $ObjectKey %}",
              "DatasetRevisionId": "{% $DatasetRevisionId %}",
              "TxcFileAttributesId": "{% $fileAttributesEtl %}",
              "DatasetEtlTaskResultId": "{% $datasetEtlTaskResultIdd %}"
            },
            "Output": {
              "etlProcess": "{% $states.result %}"
            },
            "Next": "Success",
            "Catch": [
              {
                "ErrorEquals": ["States.ALL"],
                "Next": "ExceptionHandler",
                "Output": {
                  "errorInfo": {
                    "Error": "$states.errorOutput.Error",
                    "Cause": "$states.errorOutput.Cause"
                  }
                }
              }
            ]
          },
          "Success": {
            "Type": "Succeed"
          },
          "ExceptionHandler": {
            "Type": "Task",
            "Resource": "${ExceptionHandlerLambdaArn}",
            "Arguments": {
              "Error": "$states.input.errorInfo.Error",
              "Cause": "$states.input.errorInfo.Cause",
              "DatasetEtlTaskResultId": "$DatasetEtlTaskResultId"
            },
            "Next": "Fail"
          },
          "Fail": {
            "Type": "Fail"
          }
        }
      },
      "MaxConcurrency": 1000,
      "ToleratedFailurePercentage": 100,
      "Next": "GenerateOutputZip",
      "Output": {
        "mapResults": "{% $states.result %}",
        "detail": "{% $states.input.detail %}",
        "scanner": "{% $states.input.scanner %}"
      }
    },
    "GenerateOutputZip": {
      "Type": "Task",
      "Resource": "${GenerateOutputZipLambdaArn}",
      "Arguments": {
        "MapRunArn": "{% $states.input.mapResults.MapRunArn %}",
        "DestinationBucket": "{% $states.input.detail.bucket.name %}",
        "OutputPrefix": "{% $ExtractedSubFolder %}",
        "DatasetRevisionId": "{% $datasetRevisionId %}",
        "OriginalObjectKey": "{% $states.input.detail.object.key %}"
      },
      "End": true,
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ParentExceptionHandler",
          "Output": {
            "errorInfo": {
              "Error": "{% $error %}",
              "Cause": "{% $cause %}"
            }
          }
        }
      ]
    },
    "ParentExceptionHandler": {
      "Type": "Task",
      "Resource": "${ExceptionHandlerLambdaArn}",
      "Arguments": {
        "Error": "{% $states.input.errorInfo.Error %}",
        "Cause": "{% $states.input.errorInfo.Cause %}",
        "DatasetRevisionId": "{% $datasetRevisionId %}"
      },
      "End": true
    }
  }
}
